'use client';

import React from 'react';
import { useSelector } from 'react-redux';
import {
  selectCartTotalCount,
  selectCartTotalPrice,
} from '@/entities/cart/model/cartItems.slice';
import MainButton from '@/shared/ui/Button/MainButton';
import HorizontalLine from '@/shared/ui/HorizontalLine';
import LockOutlinedIcon from '@mui/icons-material/LockOutlined';

interface CartSummaryProps {
  onCheckout: () => void;
  isCheckoutLoading?: boolean;
  isAuthenticated: boolean;
  onLoginRequired: () => void;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∏—Ç–æ–≥–æ–≤ –∫–æ—Ä–∑–∏–Ω—ã —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∫–Ω–æ–ø–∫—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
 */
export const CartSummary: React.FC<CartSummaryProps> = ({
  onCheckout,
  isCheckoutLoading = false,
  isAuthenticated,
  onLoginRequired,
}) => {
  const totalCount = useSelector(selectCartTotalCount);
  const totalPrice = useSelector(selectCartTotalPrice);

  const handleCheckoutClick = () => {
    if (!isAuthenticated) {
      onLoginRequired();
      return;
    }
    onCheckout();
  };

  if (totalCount === 0) {
    return null;
  }

  return (
    <div className="bg-white rounded-lg shadow-sm border p-6 sticky top-4">
      <h3 className="text-lg font-semibold text-gray-900 mb-4">
        –ò—Ç–æ–≥–æ –ø–æ –∑–∞–∫–∞–∑—É
      </h3>

      <div className="space-y-3">
        {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ */}
        <div className="flex justify-between text-sm">
          <span className="text-gray-600">
            –¢–æ–≤–∞—Ä–æ–≤ ({totalCount} {getItemsWord(totalCount)})
          </span>
          <span className="font-medium">{totalPrice.toLocaleString()} ‚ÇΩ</span>
        </div>

        {/* –î–æ—Å—Ç–∞–≤–∫–∞ */}
        <div className="flex justify-between text-sm">
          <span className="text-gray-600">–î–æ—Å—Ç–∞–≤–∫–∞</span>
          <span className="text-green-600 font-medium">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</span>
        </div>

        <HorizontalLine />

        {/* –ò—Ç–æ–≥–æ */}
        <div className="flex justify-between text-lg font-semibold">
          <span>–ö –æ–ø–ª–∞—Ç–µ:</span>
          <span className="text-blue-600">{totalPrice.toLocaleString()} ‚ÇΩ</span>
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ */}
      <div className="mt-6">
        <MainButton
          onClick={handleCheckoutClick}
          disabled={isCheckoutLoading || totalCount === 0}
          className="w-full"
        >
          {isCheckoutLoading ? (
            <div className="flex items-center justify-center">
              <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
              –û—Ñ–æ—Ä–º–ª—è–µ–º –∑–∞–∫–∞–∑...
            </div>
          ) : !isAuthenticated ? (
            <div className="flex items-center justify-center">
              <LockOutlinedIcon className="w-4 h-4 mr-2" />
              –í–æ–π—Ç–∏ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
            </div>
          ) : (
            '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑'
          )}
        </MainButton>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
      <div className="mt-4 text-xs text-gray-500 text-center">
        <div className="flex items-center justify-center mb-1">
          <LockOutlinedIcon className="w-3 h-3 mr-1" />
          –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞
        </div>
        <p>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã SSL-—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º</p>
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="mt-4 pt-4 border-t border-gray-100">
        <div className="space-y-2 text-xs text-gray-500">
          <div className="flex items-center justify-between">
            <span>üöö –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ú–æ—Å–∫–≤–µ</span>
            <span className="text-green-600">1-2 –¥–Ω—è</span>
          </div>
          <div className="flex items-center justify-between">
            <span>üì¶ –°–∞–º–æ–≤—ã–≤–æ–∑</span>
            <span className="text-green-600">–°–µ–≥–æ–¥–Ω—è</span>
          </div>
          <div className="flex items-center justify-between">
            <span>üí≥ –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏</span>
            <span className="text-green-600">–î–æ—Å—Ç—É–ø–Ω–æ</span>
          </div>
        </div>
      </div>
    </div>
  );
};

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–ª–æ–Ω–µ–Ω–∏—è —Å–ª–æ–≤–∞ "—Ç–æ–≤–∞—Ä"
 */
const getItemsWord = (count: number): string => {
  const lastDigit = count % 10;
  const lastTwoDigits = count % 100;

  if (lastTwoDigits >= 11 && lastTwoDigits <= 14) {
    return '—Ç–æ–≤–∞—Ä–æ–≤';
  }

  switch (lastDigit) {
    case 1:
      return '—Ç–æ–≤–∞—Ä';
    case 2:
    case 3:
    case 4:
      return '—Ç–æ–≤–∞—Ä–∞';
    default:
      return '—Ç–æ–≤–∞—Ä–æ–≤';
  }
};

export default CartSummary;
